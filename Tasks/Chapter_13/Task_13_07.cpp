#include <iostream>
#include "Graph.h"
#include "Simple_window.h"

constexpr uchar R[9][13] =
{
	{51, 51, 51, 25, 0, 0, 0, 0, 0, 25, 51, 51, 0},
	{102, 102, 102, 51, 0, 0, 0, 0, 0, 51, 102, 102, 32},
	{153, 153, 153, 76, 0, 0, 0, 0, 0, 76, 153, 153, 64},
	{204, 204, 204, 102, 0, 0, 0, 0, 0, 102, 204, 204, 96},
	{255, 255, 255, 128, 0, 0, 0, 0, 0, 127, 255, 255, 128},
	{255, 255, 255, 153, 51, 51, 51, 51, 51, 153, 255, 255, 160},
	{255, 255, 255, 178, 102, 102, 102, 102, 102, 178, 255, 255, 192},
	{255, 255, 255, 204, 153, 153, 153, 153, 153, 204, 255, 255, 224},
	{255, 255, 255, 229, 204, 209, 204, 204, 204, 229, 255, 255, 255}
};
constexpr uchar G[9][13] =
{
	{0, 25, 51, 51, 51, 51, 51, 25, 0, 0, 0, 0, 0},
	{0, 51, 102, 102, 102, 102, 102, 51, 0, 0, 0, 0, 32},
	{0, 76, 153, 153, 153, 153, 153, 76, 0, 0, 0, 0, 64},
	{0, 102, 204, 204, 204, 204, 204, 102, 0, 0, 0, 0, 96},
	{0, 128, 255, 255, 255, 255, 255, 128, 0, 0, 0, 0, 128},
	{51, 153, 255, 255, 255, 255, 255, 153, 51, 51, 51, 51, 160},
	{102, 178, 255, 255, 255, 255, 255, 178, 102, 102, 102, 102, 192},
	{153, 204, 255, 255, 255, 255, 255, 204, 153, 153, 153, 153, 224},
	{204, 229, 255, 255, 255, 255, 255, 229, 204, 204, 204, 204, 255}
};
constexpr uchar B[9][13] =
{
	{0, 0, 0, 0, 0, 25, 51, 51, 51, 51, 51, 25, 0},
	{0, 0, 0, 0, 0, 51, 102, 102, 102, 102, 102, 51, 32},
	{0, 0, 0, 0, 0, 76, 153, 153, 153, 153, 153, 76, 64},
	{0, 0, 0, 0, 0, 102, 204, 204, 204, 204, 204, 102, 96},
	{0, 0, 0, 0, 0, 128, 255, 255, 255, 255, 255, 127, 128},
	{51, 51, 51, 51, 51, 153, 255, 255, 255, 255, 255, 153, 160},
	{102, 102, 102, 102, 102, 178, 255, 255, 255, 255, 255, 178, 192},
	{153, 153, 153, 153, 153, 204, 255, 255, 255, 255, 255, 204, 224},
	{204, 204, 204, 204, 204, 229, 255, 225, 255, 255, 255, 229, 255}
};

int main()
try
{
	Simple_window win(Point(100, 100), x_max() - 200, y_max() - 200, "Simple_window");
	int size = 50;
	Vector_ref<Graph_lib::Rectangle> rgb_chart;
	for (int i = 0; i < 9; ++i)
	{
		for (int j = 0; j < 13; ++j)
		{
			rgb_chart.push_back(new Graph_lib::Rectangle(Point(j * size, i * size), size, size));
			rgb_chart[rgb_chart.size() - 1].set_fill_color(fl_rgb_color(R[i][j], G[i][j], B[i][j]));
			win.attach(rgb_chart[rgb_chart.size() - 1]);
		}
	}
	win.wait_for_button();
}
catch (const exception& e)
{
	std::cout << "Exception occured: " << e.what() << '\n';
	return 1;
}
catch (...)
{
	return 2;
}